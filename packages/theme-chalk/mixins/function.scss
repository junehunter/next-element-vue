@use './config.scss';

@function be($block, $blockSuffix, $element: '') {
	$name: config.$namespace + config.$common-separator + $block;
	@if $blockSuffix != '' {
		$name: $name + config.$common-separator + $blockSuffix;
	}
	@if $element != '' {
		$name: $name + config.$element-separator + $element;
	}
	@return $name;
}

@function bem($block, $element: '', $modifier: '') {
	$name: config.$namespace + config.$common-separator + $block;

	@if $element != '' {
		$name: $name + config.$element-separator + $element;
	}

	@if $modifier != '' {
		$name: $name + config.$modifier-separator + $modifier;
	}

	@return $name;
}

@function bf($args...) {
	$name: config.$namespace;
	@each $item in $args {
		@if $item != '' {
			$name: $name + '-' + $item;
		}
	}
	@return $name;
}

@function is($block, $args...) {
	$name: config.$state-prefix + $block;
	@each $item in $args {
		@if $item != '' {
			$name: $name + '-' + $item;
		}
	}
	@return $name;
}

@function joinVarName($list) {
	$name: '--' + config.$namespace;
	@each $item in $list {
		@if $item != '' {
			$name: $name + '-' + $item;
		}
	}
	@return $name;
}

@function getCssVarName($args...) {
	@return joinVarName($args);
}

@function getCssVar($args...) {
	@return var(#{joinVarName($args)});
}

@function rgba-color($color, $opacity) {
	@return rgba(red($color), green($color), blue($color), $opacity);
}
